# https://circleci.com/docs/2.0/language-php/
# https://circleci.com/docs/2.0/circleci-images/
version: 2

defaults: &defaults
    working_directory: '~/project'
    docker:
        - image: 'halplatform/php:latest'

attach_workspace: &attach_workspace
    attach_workspace:
        at: '.'

persist_workspace: &persist_workspace
    persist_to_workspace:
        root: '.'
        paths: [ '.' ]

workflows:

    version: 2

    pipeline:
        jobs:
            - fetch_code
            - install_php_dependencies:
                requires: [ fetch_code ]

            - unit_tests:
                requires: [ install_php_dependencies ]
            - static_analysis:
                requires: [ install_php_dependencies ]
            - linting:
                requires: [ install_php_dependencies ]

jobs:
    fetch_code:
        <<: *defaults
        steps:
            - checkout
            - *persist_workspace

    install_php_dependencies:
        <<: *defaults
        steps:
            - *attach_workspace

            - restore_cache:
                keys: [ 'v1-php-deps-{{ checksum "composer.lock" }}', 'v1-php-deps' ]

            - run:
                name: 'Install PHP dependencies'
                command: |
                    composer --no-interaction --no-progress install
                    composer show

            - save_cache:
                key: 'v1-php-deps-{{ checksum "composer.lock" }}'
                paths: [ 'vendor' ]

            - *persist_workspace

    unit_tests:
        <<: *defaults
        steps:
            - *attach_workspace
            - run:
                name: 'Run unit tests'
                command: |
                    vendor/bin/phpunit
            - store_test_results:
                path: '.phpunit/report'

    static_analysis:
        <<: *defaults
        steps:
            - *attach_workspace
            - run:
                name: 'Run static analysis'
                command: |
                    vendor/bin/phpstan analyse src

    linting:
        <<: *defaults
        steps:
            - *attach_workspace

            - run:
                name: 'Run syntax check'
                command: 'vendor/bin/phplint --no-cache --ansi src'

            - run:
                name: 'Run code formatting check'
                command: 'vendor/bin/phpcs -n --colors src'
