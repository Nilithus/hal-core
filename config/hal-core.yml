services:

    # Doctrine Configuration
    doctrine.config:
        class: 'Doctrine\ORM\Configuration'
        factory: ['Doctrine\ORM\Tools\Setup', 'createAnnotationMetadataConfiguration']
        arguments:
            - [@doctrine.mapping]
            - %doctrine.devmode%

    doctrine.mapping:
        class: 'DOES_NOT_MATTER'
        factory: ['QL\Hal\Core\EntityMapping', 'path']

    # Doctrine Entity Manager Configurator
    doctrine.em.config:
        class: 'QL\Hal\Core\Entity\Configurator\EntityManagerConfigurator'

    # Doctrine Event Manager
    doctrine.events:
        class: 'Doctrine\Common\EventManager'

    # Doctrine Entity Manager
    doctrine.em:
        class: 'Doctrine\ORM\EntityManager'
        factory: ['Doctrine\ORM\EntityManager', 'create']
        arguments:
            - %doctrine.connection%
            - @doctrine.config
            - @doctrine.events
        configurator: [@doctrine.em.config, 'configure']

    # Build Repository
    build.repo:
        class: 'QL\Hal\Core\Entity\Repository\BuildRepository'
        factory: [@doctrine.em, 'getRepository']
        arguments: ['QL\Hal\Core\Entity\Build']

    # Consumer Repository
    consumer.repo:
        class: 'QL\Hal\Core\Entity\Repository\ConsumerRepository'
        factory: [@doctrine.em, 'getRepository']
        arguments: ['QL\Hal\Core\Entity\Consumer']

    # Deployment Repository
    deployment.repo:
        class: 'QL\Hal\Core\Entity\Repository\DeploymentRepository'
        factory: [@doctrine.em, 'getRepository']
        arguments: ['QL\Hal\Core\Entity\Deployment']

    # Environment Repository
    environment.repo:
        class: 'QL\Hal\Core\Entity\Repository\EnvironmentRepository'
        factory: [@doctrine.em, 'getRepository']
        arguments: ['QL\Hal\Core\Entity\Environment']

    # Group Repository
    group.repo:
        class: 'QL\Hal\Core\Entity\Repository\GroupRepository'
        factory: [@doctrine.em, 'getRepository']
        arguments: ['QL\Hal\Core\Entity\Group']

    # Push Repository
    push.repo:
        class: 'QL\Hal\Core\Entity\Repository\PushRepository'
        factory: [@doctrine.em, 'getRepository']
        arguments: ['QL\Hal\Core\Entity\Push']

    # Repository Repository
    repository.repo:
        class:            'QL\Hal\Core\Entity\Repository\RepositoryRepository'
        factory: [@doctrine.em, 'getRepository']
        arguments: ['QL\Hal\Core\Entity\Repository']

    # Server Repository
    server.repo:
        class: 'QL\Hal\Core\Entity\Repository\ServerRepository'
        factory: [@doctrine.em, 'getRepository']
        arguments: ['QL\Hal\Core\Entity\Server']

    # Subscription Repository
    subscription.repo:
        class: 'QL\Hal\Core\Entity\Repository\SubscriptionRepository'
        factory: [@doctrine.em, 'getRepository']
        arguments: ['QL\Hal\Core\Entity\Subscription']

    # User Repository
    user.repo:
        class: 'QL\Hal\Core\Entity\Repository\UserRepository'
        factory: [@doctrine.em, 'getRepository']
        arguments: ['QL\Hal\Core\Entity\User']

    # Token Repository
    token.repo:
        class: 'QL\Hal\Core\Entity\Repository\TokenRepository'
        factory: [@doctrine.em, 'getRepository']
        arguments: ['QL\Hal\Core\Entity\Token']

    # Audit Log Repository
    audit.log.repo:
        class: 'QL\Hal\Core\Entity\Repository\AuditLogRepository'
        factory: [@doctrine.em, 'getRepository']
        arguments: ['QL\Hal\Core\Entity\AuditLog']

    # Event Log Repository
    event.log.repo:
        class: 'QL\Hal\Core\Entity\Repository\EventLogRepository'
        factory: [@doctrine.em, 'getRepository']
        arguments: ['QL\Hal\Core\Entity\EventLog']

    # Encrypted Property Repository
    encrypted.repo:
        class: 'QL\Hal\Core\Entity\Repository\EncryptedPropertyRepository'
        factory: [@doctrine.em, 'getRepository']
        arguments: ['QL\Hal\Core\Entity\EncryptedProperty']
