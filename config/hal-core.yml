parameters:
    # default parameters
    doctrine.devmode: false
    doctrine.proxy.dir: '.doctrine'
    doctrine.connection:
        driver: 'pdo_mysql'
        host: 'localhost'
        user: 'root'
        password: ''
        dbname: 'hal'

services:

    ####################################################################################################################
    # DOCTRINE PATHS
    ####################################################################################################################

    doctrine.mapping.dir:
        class: 'stdClass'
        factory: ['QL\Hal\Core\DoctrineFactory', 'yamlPath']

    doctrine.proxy.dir:
        class: 'stdClass'
        factory: ['QL\Hal\Core\DoctrineFactory', 'doctrineProxyPath']
        arguments: [%doctrine.proxy.dir%]

    ####################################################################################################################
    # DOCTRINE CORE
    ####################################################################################################################

    # Doctrine Entity Manager
    doctrine.em:
        class: 'Doctrine\ORM\EntityManager'
        factory: ['Doctrine\ORM\EntityManager', 'create']
        arguments:
            - %doctrine.connection%
            - @doctrine.config
            - @doctrine.em.events
        configurator: [@doctrine.em.configurator, 'configure']

    doctrine.config:
        class: 'Doctrine\ORM\Configuration'
        factory: ['Doctrine\ORM\Tools\Setup', 'createConfiguration']
        arguments:
            - %doctrine.devmode%
            - @doctrine.proxy.dir
            - @cache.doctrine
        calls:
            - ['setMetadataDriverImpl', [@doctrine.config.driver]]

    doctrine.config.driver:
        class: 'Doctrine\ORM\Mapping\Driver\SimplifiedYamlDriver'
        factory: ['QL\Hal\Core\DoctrineFactory', 'buildConfigurationDriver']
        arguments: [@doctrine.mapping.dir]

    doctrine.em.configurator:
        class: 'QL\Hal\Core\DoctrineConfigurator'
    doctrine.em.events:
        class: 'Doctrine\Common\EventManager'

    cache.doctrine:
        class: 'Doctrine\Common\Cache\ArrayCache'

    ####################################################################################################################
    # DOCTRINE HELPERS
    ####################################################################################################################

    doctrine.random.id:
        class: 'QL\Hal\Core\RandomGenerator'

    ####################################################################################################################
    # REPOSITORIES
    ####################################################################################################################

    # Build Repository
    build.repo:
        class: 'QL\Hal\Core\Entity\Repository\BuildRepository'
        factory: [@doctrine.em, 'getRepository']
        arguments: ['QL\Hal\Core\Entity\Build']

    # Consumer Repository
    consumer.repo:
        class: 'QL\Hal\Core\Entity\Repository\ConsumerRepository'
        factory: [@doctrine.em, 'getRepository']
        arguments: ['QL\Hal\Core\Entity\Consumer']

    # Deployment Repository
    deployment.repo:
        class: 'QL\Hal\Core\Entity\Repository\DeploymentRepository'
        factory: [@doctrine.em, 'getRepository']
        arguments: ['QL\Hal\Core\Entity\Deployment']

    # Environment Repository
    environment.repo:
        class: 'QL\Hal\Core\Entity\Repository\EnvironmentRepository'
        factory: [@doctrine.em, 'getRepository']
        arguments: ['QL\Hal\Core\Entity\Environment']

    # Group Repository
    group.repo:
        class: 'QL\Hal\Core\Entity\Repository\GroupRepository'
        factory: [@doctrine.em, 'getRepository']
        arguments: ['QL\Hal\Core\Entity\Group']

    # Push Repository
    push.repo:
        class: 'QL\Hal\Core\Entity\Repository\PushRepository'
        factory: [@doctrine.em, 'getRepository']
        arguments: ['QL\Hal\Core\Entity\Push']

    # Repository Repository
    repository.repo:
        class:            'QL\Hal\Core\Entity\Repository\RepositoryRepository'
        factory: [@doctrine.em, 'getRepository']
        arguments: ['QL\Hal\Core\Entity\Repository']

    # Server Repository
    server.repo:
        class: 'QL\Hal\Core\Entity\Repository\ServerRepository'
        factory: [@doctrine.em, 'getRepository']
        arguments: ['QL\Hal\Core\Entity\Server']

    # User Repository
    user.repo:
        class: 'QL\Hal\Core\Entity\Repository\UserRepository'
        factory: [@doctrine.em, 'getRepository']
        arguments: ['QL\Hal\Core\Entity\User']

    # Token Repository
    token.repo:
        class: 'QL\Hal\Core\Entity\Repository\TokenRepository'
        factory: [@doctrine.em, 'getRepository']
        arguments: ['QL\Hal\Core\Entity\Token']

    # Audit Log Repository
    audit.log.repo:
        class: 'QL\Hal\Core\Entity\Repository\AuditLogRepository'
        factory: [@doctrine.em, 'getRepository']
        arguments: ['QL\Hal\Core\Entity\AuditLog']

    # Event Log Repository
    event.log.repo:
        class: 'QL\Hal\Core\Entity\Repository\EventLogRepository'
        factory: [@doctrine.em, 'getRepository']
        arguments: ['QL\Hal\Core\Entity\EventLog']

    # Encrypted Property Repository
    encrypted.repo:
        class: 'QL\Hal\Core\Entity\Repository\EncryptedPropertyRepository'
        factory: [@doctrine.em, 'getRepository']
        arguments: ['QL\Hal\Core\Entity\EncryptedProperty']
